worker_processes auto;                  # ставит число воркеров = числу ядер CPU
worker_cpu_affinity auto;               # привязка воркеров к CPU
events {
    worker_connections 1024; # Для RPi4 (4 ядра) это 4 * 1024 = 4096 одновременных клиентов, обычно достаточно.
                             # Убедитесь, что ulimit -n на хосте и в контейнере это позволяет.
    multi_accept on;         # Рабочие процессы будут принимать все новые соединения сразу.
    use epoll;               # Alpine Linux обычно использует epoll по умолчанию, но указать не помешает.
}
http {
    sendfile on;                 # Включает более эффективную передачу файлов.
    tcp_nopush on;               # Отправляет HTTP-ответ одним пакетом (работает вместе с sendfile).
    tcp_nodelay on;              # Отключает алгоритм Нейгла, уменьшает задержки для keep-alive.
    keepalive_timeout 65s;       # Время ожидания для keep-alive соединений.
    server_tokens off;           # Не показывать версию Nginx в ответах (безопасность).
    reset_timedout_connection on;# Быстрее освобождать ресурсы от зависших клиентов.

    open_file_cache max=2000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    access_log off;# Полностью отключить для макс. производительности


    upstream fastapi {
        server app:8000;
        keepalive 32;
    }

    upstream api {
        server api:8001;
        keepalive 16;
    }

    upstream flower {
        server flower:5555;
        keepalive 8;
    }

    include       mime.types;
    default_type  application/octet-stream;

    server {
        listen 80;
        server_name localhost;

        location /static/ {
            alias /static/;
            autoindex off;
            add_header Cache-Control "public, max-age=31536000";
        }

        location /b/static/ {
            alias /static/;
            autoindex off;
            add_header Cache-Control "public, max-age=31536000";
        }

        location ~ ^/b/src/([^/]+)/(.+)$ {
            rewrite ^/b/src/([^/]+)/(.+)$ /downloads/$1/$2 break;
            root /;
            try_files $uri =404;
            add_header Cache-Control "public, max-age=31536000";
        }

        location ~ ^/b/thumb/([^/]+)/(.+)$ {
            rewrite ^/b/thumb/([^/]+)/(.+)$ /downloads/$1/thumb/$2 break;
            root /;
            try_files $uri =404;
            add_header Cache-Control "public, max-age=31536000";
        }

        location ~ ^/b/res/([0-9]+)\.json$ {
            root /;  # если /downloads доступен из /
            try_files /downloads/$1/$1.json =404;
            add_header Cache-Control "public, max-age=60";
            default_type application/json;
        }

        # API endpoints
        location /api/ {
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # Flower monitoring (optional)
        location /flower/ {
            proxy_pass http://flower;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_set_header X-Script-Name /flower;
        }

        location / {
            proxy_pass http://fastapi;
            proxy_http_version 1.1;                 # Для keep-alive с upstream
            proxy_set_header Connection "";         # Очистка Connection заголовка
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 